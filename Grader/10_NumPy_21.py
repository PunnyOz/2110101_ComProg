import numpy as np


def sum_2_rows(M):
    # คืนผลที่ได ้จากการรวมจ านวนในคอลัมน์เดียวกันของแถวที่ติดกันทีละคู่แถว
    # เชน่ M = [[ 0, 1, 2, 3], ได ้ [[ 4, 6, 8, 10],
    # [ 4, 5, 6, 7], [20, 22, 24, 26]]
    # [ 8, 9, 10, 11],
    # [12, 13, 14, 15]]
    return M[::2] + M[1::2]


def sum_left_right(M):
    # คนืผลทไี่ ดจ้ากการรวมจ านวนของครงึ่ ซา้ยกับครงึ่ ขวาของ M
    # เชน่ M = [[ 0, 1, 2, 3], ได ้ [[ 2, 4],
    # [ 4, 5, 6, 7], [10, 12],
    # [ 8, 9, 10, 11], [18, 20],
    # [12, 13, 14, 15]] [26, 28]]
    return M[:, :len(M[0])//2] + M[:, len(M[0])//2:]


def sum_upper_lower(M):
    # คืนผลที่ได ้จากการรวมจ านวนของครึ่งบนกับครึ่งล่างของ M
    # เชน่ M = [[ 0, 1, 2, 3], ได ้ [[ 8, 10, 12, 14],
    # [ 4, 5, 6, 7], [16, 18, 20, 22]]
    # [ 8, 9, 10, 11],
    # [12, 13, 14, 15]]
    return M[:len(M)//2, :] + M[len(M)//2:, :]


def sum_4_quadrants(M):
    # คืนผลที่ได ้จากการแบ่ง M เป็น 4 จตุภาค และรวมจ านวนที่ต าแหน่งตรงกันในแต่ละจตุภาค
    # เชน่ M = [[ 0, 1, 2, 3], ได ้ [[20, 24],
    # [ 4, 5, 6, 7], [36, 40]]
    # [ 8, 9, 10, 11],
    # [12, 13, 14, 15]]
    return M[:len(M)//2, :len(M[0])//2] + M[:len(M)//2, len(M[0])//2:] + M[len(M)//2:, :len(M[0])//2] + M[len(M)//2:, len(M[0])//2:]


def sum_4_cells(M):
    # คืนผลที่ได ้จากการรวมจ านวนที่ติดกัน 4 ตัว ตามรูปแบบในตัวอย่างข ้างล่างนี้
    # เชน่ M = [[ 0, 1, 2, 3], ได ้ [[10, 18],
    # [ 4, 5, 6, 7], [42, 50]]
    # [ 8, 9, 10, 11],
    # [12, 13, 14, 15]]
    return M[::2, ::2] + M[::2, 1::2] + M[1::2, ::2] + M[1::2, 1::2]


def count_leap_years(years):
    # years เป็นอาเรย์เก็บปี พ.ศ.
    # คืนจ านวนปีใน years ที่เป็นปีอทิกสุรทิน (ปีที่ ก.พ. มี 29 วัน)
    years = years - 543
    return np.sum(np.logical_and(years % 4 == 0, years % 100 != 0) | (years % 400 == 0))


exec(input().strip())  # ตอ้ งมคี าสั่งนี้ ตรงนี้ตอนสง่ ให้Grader ตรวจ
